root@myweb:~/blog_django#
root@myweb:~/blog_django# docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED        STATUS                  PORTS                                                                      NAMES
c7a352eab1d2   blog_django_nginx   "/docker-entrypoint.…"   15 hours ago   Up 15 hours             0.0.0.0:80->80/tcp, :::80->80/tcp, 0.0.0.0:443->443/tcp, :::443->443/tcp   blog_django_nginx_1
f82db3d13594   blog_django_web     "sh -c ' python mana…"   15 hours ago   Up 15 hours             8000/tcp                                                                   blog_django_web_1
bf2795c2a3cf   postgres:16         "docker-entrypoint.s…"   15 hours ago   Up 15 hours (healthy)   5432/tcp                                                                   blog_django_db_1
root@myweb:~/blog_django#
root@myweb:~/blog_django# mkdir pg-backups
root@myweb:~/blog_django#
root@myweb:~/blog_django# docker-compose exec db pg_dump -U postgres -F c -b -v -f blogdb.backup blogdb
pg_dump: last built-in OID is 16383
pg_dump: reading extensions
pg_dump: identifying extension members
pg_dump: reading schemas
pg_dump: reading user-defined tables
pg_dump: reading user-defined functions
pg_dump: reading user-defined types
pg_dump: reading procedural languages
pg_dump: reading user-defined aggregate functions
pg_dump: reading user-defined operators
pg_dump: reading user-defined access methods
pg_dump: reading user-defined operator classes
pg_dump: reading user-defined operator families
pg_dump: reading user-defined text search parsers
pg_dump: reading user-defined text search templates
pg_dump: reading user-defined text search dictionaries
pg_dump: reading user-defined text search configurations
pg_dump: reading user-defined foreign-data wrappers
pg_dump: reading user-defined foreign servers
pg_dump: reading default privileges
pg_dump: reading user-defined collations
pg_dump: reading user-defined conversions
pg_dump: reading type casts
pg_dump: reading transforms
pg_dump: reading table inheritance information
pg_dump: reading event triggers
pg_dump: finding extension tables
pg_dump: finding inheritance relationships
pg_dump: reading column info for interesting tables
pg_dump: finding table check constraints
pg_dump: flagging inherited columns in subtables
pg_dump: reading partitioning data
pg_dump: reading indexes
pg_dump: flagging indexes in partitioned tables
pg_dump: reading extended statistics
pg_dump: reading constraints
pg_dump: reading triggers
pg_dump: reading rewrite rules
pg_dump: reading policies
pg_dump: reading row-level security policies
pg_dump: reading publications
pg_dump: reading publication membership of tables
pg_dump: reading publication membership of schemas
pg_dump: reading subscriptions
pg_dump: reading large objects
pg_dump: reading dependency data
pg_dump: saving encoding = UTF8
pg_dump: saving standard_conforming_strings = on
pg_dump: saving search_path =
pg_dump: saving database definition
pg_dump: dumping contents of table "public.auth_group"
pg_dump: dumping contents of table "public.auth_group_permissions"
pg_dump: dumping contents of table "public.auth_permission"
pg_dump: dumping contents of table "public.auth_user"
pg_dump: dumping contents of table "public.auth_user_groups"
pg_dump: dumping contents of table "public.auth_user_user_permissions"
pg_dump: dumping contents of table "public.blog_author"
pg_dump: dumping contents of table "public.blog_comment"
pg_dump: dumping contents of table "public.blog_post"
pg_dump: dumping contents of table "public.blog_post_tags"
pg_dump: dumping contents of table "public.blog_tag"
pg_dump: dumping contents of table "public.django_admin_log"
pg_dump: dumping contents of table "public.django_content_type"
pg_dump: dumping contents of table "public.django_migrations"
pg_dump: dumping contents of table "public.django_session"
root@myweb:~/blog_django#
root@myweb:~/blog_django# docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED        STATUS                  PORTS                                                                      NAMES
c7a352eab1d2   blog_django_nginx   "/docker-entrypoint.…"   15 hours ago   Up 15 hours             0.0.0.0:80->80/tcp, :::80->80/tcp, 0.0.0.0:443->443/tcp, :::443->443/tcp   blog_django_nginx_1
f82db3d13594   blog_django_web     "sh -c ' python mana…"   15 hours ago   Up 15 hours             8000/tcp                                                                   blog_django_web_1
bf2795c2a3cf   postgres:16         "docker-entrypoint.s…"   15 hours ago   Up 15 hours (healthy)   5432/tcp                                                                   blog_django_db_1
root@myweb:~/blog_django#
root@myweb:~/blog_django# docker cp bf2795c2a3cf:/blogdb.backup ./pg-backups/
Successfully copied 44.5kB to /root/blog_django/pg-backups/
root@myweb:~/blog_django#
root@myweb:~/blog_django# ls pg-backups/
blogdb.backup
root@myweb:~/blog_django# ll pg-backups/
total 52
drwxr-xr-x 2 root root  4096 Aug 23 16:25 ./
drwxr-xr-x 9 root root  4096 Aug 23 16:24 ../
-rw-r--r-- 1 root root 42708 Aug 23 16:24 blogdb.backup
root@myweb:~/blog_django#
root@myweb:~/blog_django#
root@myweb:~/blog_django#
root@myweb:~/blog_django#
root@myweb:~/blog_django#
root@myweb:~/blog_django# docker-compose exec db pg_restore -U postgres -d blogdb -v blogdb.backup
pg_restore: connecting to database for restore
pg_restore: creating TABLE "public.auth_group"
pg_restore: while PROCESSING TOC:
pg_restore: from TOC entry 222; 1259 16413 TABLE auth_group dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group" already exists
Command was: CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


pg_restore: creating SEQUENCE "public.auth_group_id_seq"
pg_restore: from TOC entry 221; 1259 16412 SEQUENCE auth_group_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_id_seq" already exists
Command was: ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.auth_group_permissions"
pg_restore: from TOC entry 224; 1259 16421 TABLE auth_group_permissions dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_permissions" already exists
Command was: CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


pg_restore: creating SEQUENCE "public.auth_group_permissions_id_seq"
pg_restore: from TOC entry 223; 1259 16420 SEQUENCE auth_group_permissions_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_permissions_id_seq" already exists
Command was: ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.auth_permission"
pg_restore: from TOC entry 220; 1259 16407 TABLE auth_permission dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_permission" already exists
Command was: CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


pg_restore: creating SEQUENCE "public.auth_permission_id_seq"
pg_restore: from TOC entry 219; 1259 16406 SEQUENCE auth_permission_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_permission_id_seq" already exists
Command was: ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.auth_user"
pg_restore: from TOC entry 226; 1259 16427 TABLE auth_user dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user" already exists
Command was: CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


pg_restore: creating TABLE "public.auth_user_groups"
pg_restore: from TOC entry 228; 1259 16435 TABLE auth_user_groups dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_groups" already exists
Command was: CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


pg_restore: creating SEQUENCE "public.auth_user_groups_id_seq"
pg_restore: from TOC entry 227; 1259 16434 SEQUENCE auth_user_groups_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_groups_id_seq" already exists
Command was: ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating SEQUENCE "public.auth_user_id_seq"
pg_restore: from TOC entry 225; 1259 16426 SEQUENCE auth_user_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_id_seq" already exists
Command was: ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.auth_user_user_permissions"
pg_restore: from TOC entry 230; 1259 16441 TABLE auth_user_user_permissions dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_user_permissions" already exists
Command was: CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


pg_restore: creating SEQUENCE "public.auth_user_user_permissions_id_seq"
pg_restore: from TOC entry 229; 1259 16440 SEQUENCE auth_user_user_permissions_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_user_permissions_id_seq" already exists
Command was: ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.blog_author"
pg_restore: from TOC entry 234; 1259 16528 TABLE blog_author dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_author" already exists
Command was: CREATE TABLE public.blog_author (
    id bigint NOT NULL,
    first_name character varying(100) NOT NULL,
    last_name character varying(100) NOT NULL,
    email_address character varying(254) NOT NULL
);


pg_restore: creating SEQUENCE "public.blog_author_id_seq"
pg_restore: from TOC entry 233; 1259 16527 SEQUENCE blog_author_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_author_id_seq" already exists
Command was: ALTER TABLE public.blog_author ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_author_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.blog_comment"
pg_restore: from TOC entry 242; 1259 16577 TABLE blog_comment dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_comment" already exists
Command was: CREATE TABLE public.blog_comment (
    id bigint NOT NULL,
    user_name character varying(120) NOT NULL,
    user_email character varying(254) NOT NULL,
    text text NOT NULL,
    post_id bigint NOT NULL
);


pg_restore: creating SEQUENCE "public.blog_comment_id_seq"
pg_restore: from TOC entry 241; 1259 16576 SEQUENCE blog_comment_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_comment_id_seq" already exists
Command was: ALTER TABLE public.blog_comment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_comment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.blog_post"
pg_restore: from TOC entry 238; 1259 16540 TABLE blog_post dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post" already exists
Command was: CREATE TABLE public.blog_post (
    id bigint NOT NULL,
    title character varying(150) NOT NULL,
    excerpt character varying(200) NOT NULL,
    date date NOT NULL,
    slug character varying(50) NOT NULL,
    content text NOT NULL,
    author_id bigint,
    image character varying(100)
);


pg_restore: creating SEQUENCE "public.blog_post_id_seq"
pg_restore: from TOC entry 237; 1259 16539 SEQUENCE blog_post_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_id_seq" already exists
Command was: ALTER TABLE public.blog_post ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_post_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.blog_post_tags"
pg_restore: from TOC entry 240; 1259 16550 TABLE blog_post_tags dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_tags" already exists
Command was: CREATE TABLE public.blog_post_tags (
    id bigint NOT NULL,
    post_id bigint NOT NULL,
    tag_id bigint NOT NULL
);


pg_restore: creating SEQUENCE "public.blog_post_tags_id_seq"
pg_restore: from TOC entry 239; 1259 16549 SEQUENCE blog_post_tags_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_tags_id_seq" already exists
Command was: ALTER TABLE public.blog_post_tags ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_post_tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.blog_tag"
pg_restore: from TOC entry 236; 1259 16534 TABLE blog_tag dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_tag" already exists
Command was: CREATE TABLE public.blog_tag (
    id bigint NOT NULL,
    caption character varying(20) NOT NULL
);


pg_restore: creating SEQUENCE "public.blog_tag_id_seq"
pg_restore: from TOC entry 235; 1259 16533 SEQUENCE blog_tag_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_tag_id_seq" already exists
Command was: ALTER TABLE public.blog_tag ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.django_admin_log"
pg_restore: from TOC entry 232; 1259 16499 TABLE django_admin_log dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_admin_log" already exists
Command was: CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


pg_restore: creating SEQUENCE "public.django_admin_log_id_seq"
pg_restore: from TOC entry 231; 1259 16498 SEQUENCE django_admin_log_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_admin_log_id_seq" already exists
Command was: ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.django_content_type"
pg_restore: from TOC entry 218; 1259 16399 TABLE django_content_type dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_content_type" already exists
Command was: CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


pg_restore: creating SEQUENCE "public.django_content_type_id_seq"
pg_restore: from TOC entry 217; 1259 16398 SEQUENCE django_content_type_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_content_type_id_seq" already exists
Command was: ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.django_migrations"
pg_restore: from TOC entry 216; 1259 16391 TABLE django_migrations dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_migrations" already exists
Command was: CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


pg_restore: creating SEQUENCE "public.django_migrations_id_seq"
pg_restore: from TOC entry 215; 1259 16390 SEQUENCE django_migrations_id_seq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_migrations_id_seq" already exists
Command was: ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


pg_restore: creating TABLE "public.django_session"
pg_restore: from TOC entry 243; 1259 16590 TABLE django_session dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_session" already exists
Command was: CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


pg_restore: processing data for table "public.auth_group"
pg_restore: processing data for table "public.auth_group_permissions"
pg_restore: processing data for table "public.auth_permission"
pg_restore: from TOC entry 3500; 0 16407 TABLE DATA auth_permission dbadminuser
pg_restore: error: COPY failed for table "auth_permission": ERROR:  duplicate key value violates unique constraint "auth_permission_pkey"
DETAIL:  Key (id)=(1) already exists.
CONTEXT:  COPY auth_permission, line 1
pg_restore: processing data for table "public.auth_user"
pg_restore: from TOC entry 3506; 0 16427 TABLE DATA auth_user dbadminuser
pg_restore: error: COPY failed for table "auth_user": ERROR:  duplicate key value violates unique constraint "auth_user_pkey"
DETAIL:  Key (id)=(1) already exists.
CONTEXT:  COPY auth_user, line 1
pg_restore: processing data for table "public.auth_user_groups"
pg_restore: processing data for table "public.auth_user_user_permissions"
pg_restore: processing data for table "public.blog_author"
pg_restore: processing data for table "public.blog_comment"
pg_restore: processing data for table "public.blog_post"
pg_restore: processing data for table "public.blog_post_tags"
pg_restore: processing data for table "public.blog_tag"
pg_restore: processing data for table "public.django_admin_log"
pg_restore: processing data for table "public.django_content_type"
pg_restore: from TOC entry 3498; 0 16399 TABLE DATA django_content_type dbadminuser
pg_restore: error: COPY failed for table "django_content_type": ERROR:  duplicate key value violates unique constraint "django_content_type_pkey"
DETAIL:  Key (id)=(1) already exists.
CONTEXT:  COPY django_content_type, line 1
pg_restore: processing data for table "public.django_migrations"
pg_restore: from TOC entry 3496; 0 16391 TABLE DATA django_migrations dbadminuser
pg_restore: error: COPY failed for table "django_migrations": ERROR:  duplicate key value violates unique constraint "django_migrations_pkey"
DETAIL:  Key (id)=(1) already exists.
CONTEXT:  COPY django_migrations, line 1
pg_restore: processing data for table "public.django_session"
pg_restore: from TOC entry 3523; 0 16590 TABLE DATA django_session dbadminuser
pg_restore: error: COPY failed for table "django_session": ERROR:  duplicate key value violates unique constraint "django_session_pkey"
DETAIL:  Key (session_key)=(ibo4czqxaxnowb57ekumnyb5pqktbazy) already exists.
CONTEXT:  COPY django_session, line 1
pg_restore: executing SEQUENCE SET auth_group_id_seq
pg_restore: executing SEQUENCE SET auth_group_permissions_id_seq
pg_restore: executing SEQUENCE SET auth_permission_id_seq
pg_restore: executing SEQUENCE SET auth_user_groups_id_seq
pg_restore: executing SEQUENCE SET auth_user_id_seq
pg_restore: executing SEQUENCE SET auth_user_user_permissions_id_seq
pg_restore: executing SEQUENCE SET blog_author_id_seq
pg_restore: executing SEQUENCE SET blog_comment_id_seq
pg_restore: executing SEQUENCE SET blog_post_id_seq
pg_restore: executing SEQUENCE SET blog_post_tags_id_seq
pg_restore: executing SEQUENCE SET blog_tag_id_seq
pg_restore: executing SEQUENCE SET django_admin_log_id_seq
pg_restore: executing SEQUENCE SET django_content_type_id_seq
pg_restore: executing SEQUENCE SET django_migrations_id_seq
pg_restore: creating CONSTRAINT "public.auth_group auth_group_name_key"
pg_restore: from TOC entry 3286; 2606 16525 CONSTRAINT auth_group auth_group_name_key dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_name_key" already exists
Command was: ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


pg_restore: creating CONSTRAINT "public.auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq"
pg_restore: from TOC entry 3291; 2606 16456 CONSTRAINT auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" already exists
Command was: ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


pg_restore: creating CONSTRAINT "public.auth_group_permissions auth_group_permissions_pkey"
pg_restore: from TOC entry 3294; 2606 16425 CONSTRAINT auth_group_permissions auth_group_permissions_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "auth_group_permissions" are not allowed
Command was: ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.auth_group auth_group_pkey"
pg_restore: from TOC entry 3288; 2606 16417 CONSTRAINT auth_group auth_group_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "auth_group" are not allowed
Command was: ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.auth_permission auth_permission_content_type_id_codename_01ab375a_uniq"
pg_restore: from TOC entry 3281; 2606 16447 CONSTRAINT auth_permission auth_permission_content_type_id_codename_01ab375a_uniq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_permission_content_type_id_codename_01ab375a_uniq" already exists
Command was: ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


pg_restore: creating CONSTRAINT "public.auth_permission auth_permission_pkey"
pg_restore: from TOC entry 3283; 2606 16411 CONSTRAINT auth_permission auth_permission_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "auth_permission" are not allowed
Command was: ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.auth_user_groups auth_user_groups_pkey"
pg_restore: from TOC entry 3302; 2606 16439 CONSTRAINT auth_user_groups auth_user_groups_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "auth_user_groups" are not allowed
Command was: ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq"
pg_restore: from TOC entry 3305; 2606 16471 CONSTRAINT auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_groups_user_id_group_id_94350c0c_uniq" already exists
Command was: ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


pg_restore: creating CONSTRAINT "public.auth_user auth_user_pkey"
pg_restore: from TOC entry 3296; 2606 16431 CONSTRAINT auth_user auth_user_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "auth_user" are not allowed
Command was: ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.auth_user_user_permissions auth_user_user_permissions_pkey"
pg_restore: from TOC entry 3308; 2606 16445 CONSTRAINT auth_user_user_permissions auth_user_user_permissions_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "auth_user_user_permissions" are not allowed
Command was: ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq"
pg_restore: from TOC entry 3311; 2606 16485 CONSTRAINT auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" already exists
Command was: ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


pg_restore: creating CONSTRAINT "public.auth_user auth_user_username_key"
pg_restore: from TOC entry 3299; 2606 16520 CONSTRAINT auth_user auth_user_username_key dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_username_key" already exists
Command was: ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


pg_restore: creating CONSTRAINT "public.blog_author blog_author_pkey"
pg_restore: from TOC entry 3317; 2606 16532 CONSTRAINT blog_author blog_author_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "blog_author" are not allowed
Command was: ALTER TABLE ONLY public.blog_author
    ADD CONSTRAINT blog_author_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.blog_comment blog_comment_pkey"
pg_restore: from TOC entry 3333; 2606 16583 CONSTRAINT blog_comment blog_comment_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "blog_comment" are not allowed
Command was: ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.blog_post blog_post_pkey"
pg_restore: from TOC entry 3322; 2606 16546 CONSTRAINT blog_post blog_post_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "blog_post" are not allowed
Command was: ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.blog_post blog_post_slug_key"
pg_restore: from TOC entry 3325; 2606 16548 CONSTRAINT blog_post blog_post_slug_key dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_slug_key" already exists
Command was: ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_slug_key UNIQUE (slug);


pg_restore: creating CONSTRAINT "public.blog_post_tags blog_post_tags_pkey"
pg_restore: from TOC entry 3327; 2606 16554 CONSTRAINT blog_post_tags blog_post_tags_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "blog_post_tags" are not allowed
Command was: ALTER TABLE ONLY public.blog_post_tags
    ADD CONSTRAINT blog_post_tags_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.blog_post_tags blog_post_tags_post_id_tag_id_4925ec37_uniq"
pg_restore: from TOC entry 3330; 2606 16563 CONSTRAINT blog_post_tags blog_post_tags_post_id_tag_id_4925ec37_uniq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_tags_post_id_tag_id_4925ec37_uniq" already exists
Command was: ALTER TABLE ONLY public.blog_post_tags
    ADD CONSTRAINT blog_post_tags_post_id_tag_id_4925ec37_uniq UNIQUE (post_id, tag_id);


pg_restore: creating CONSTRAINT "public.blog_tag blog_tag_pkey"
pg_restore: from TOC entry 3319; 2606 16538 CONSTRAINT blog_tag blog_tag_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "blog_tag" are not allowed
Command was: ALTER TABLE ONLY public.blog_tag
    ADD CONSTRAINT blog_tag_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.django_admin_log django_admin_log_pkey"
pg_restore: from TOC entry 3314; 2606 16506 CONSTRAINT django_admin_log django_admin_log_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "django_admin_log" are not allowed
Command was: ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.django_content_type django_content_type_app_label_model_76bd3d3b_uniq"
pg_restore: from TOC entry 3276; 2606 16405 CONSTRAINT django_content_type django_content_type_app_label_model_76bd3d3b_uniq dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_content_type_app_label_model_76bd3d3b_uniq" already exists
Command was: ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


pg_restore: creating CONSTRAINT "public.django_content_type django_content_type_pkey"
pg_restore: from TOC entry 3278; 2606 16403 CONSTRAINT django_content_type django_content_type_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "django_content_type" are not allowed
Command was: ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.django_migrations django_migrations_pkey"
pg_restore: from TOC entry 3274; 2606 16397 CONSTRAINT django_migrations django_migrations_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "django_migrations" are not allowed
Command was: ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.django_session django_session_pkey"
pg_restore: from TOC entry 3337; 2606 16596 CONSTRAINT django_session django_session_pkey dbadminuser
pg_restore: error: could not execute query: ERROR:  multiple primary keys for table "django_session" are not allowed
Command was: ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


pg_restore: creating INDEX "public.auth_group_name_a6ea08ec_like"
pg_restore: from TOC entry 3284; 1259 16526 INDEX auth_group_name_a6ea08ec_like dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_name_a6ea08ec_like" already exists
Command was: CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


pg_restore: creating INDEX "public.auth_group_permissions_group_id_b120cbf9"
pg_restore: from TOC entry 3289; 1259 16467 INDEX auth_group_permissions_group_id_b120cbf9 dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_permissions_group_id_b120cbf9" already exists
Command was: CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


pg_restore: creating INDEX "public.auth_group_permissions_permission_id_84c5c92e"
pg_restore: from TOC entry 3292; 1259 16468 INDEX auth_group_permissions_permission_id_84c5c92e dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_group_permissions_permission_id_84c5c92e" already exists
Command was: CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


pg_restore: creating INDEX "public.auth_permission_content_type_id_2f476e4b"
pg_restore: from TOC entry 3279; 1259 16453 INDEX auth_permission_content_type_id_2f476e4b dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_permission_content_type_id_2f476e4b" already exists
Command was: CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


pg_restore: creating INDEX "public.auth_user_groups_group_id_97559544"
pg_restore: from TOC entry 3300; 1259 16483 INDEX auth_user_groups_group_id_97559544 dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_groups_group_id_97559544" already exists
Command was: CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


pg_restore: creating INDEX "public.auth_user_groups_user_id_6a12ed8b"
pg_restore: from TOC entry 3303; 1259 16482 INDEX auth_user_groups_user_id_6a12ed8b dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_groups_user_id_6a12ed8b" already exists
Command was: CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


pg_restore: creating INDEX "public.auth_user_user_permissions_permission_id_1fbb5f2c"
pg_restore: from TOC entry 3306; 1259 16497 INDEX auth_user_user_permissions_permission_id_1fbb5f2c dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_user_permissions_permission_id_1fbb5f2c" already exists
Command was: CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


pg_restore: creating INDEX "public.auth_user_user_permissions_user_id_a95ead1b"
pg_restore: from TOC entry 3309; 1259 16496 INDEX auth_user_user_permissions_user_id_a95ead1b dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_user_permissions_user_id_a95ead1b" already exists
Command was: CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


pg_restore: creating INDEX "public.auth_user_username_6821ab7c_like"
pg_restore: from TOC entry 3297; 1259 16521 INDEX auth_user_username_6821ab7c_like dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "auth_user_username_6821ab7c_like" already exists
Command was: CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


pg_restore: creating INDEX "public.blog_comment_post_id_580e96ef"
pg_restore: from TOC entry 3334; 1259 16589 INDEX blog_comment_post_id_580e96ef dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_comment_post_id_580e96ef" already exists
Command was: CREATE INDEX blog_comment_post_id_580e96ef ON public.blog_comment USING btree (post_id);


pg_restore: creating INDEX "public.blog_post_author_id_dd7a8485"
pg_restore: from TOC entry 3320; 1259 16561 INDEX blog_post_author_id_dd7a8485 dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_author_id_dd7a8485" already exists
Command was: CREATE INDEX blog_post_author_id_dd7a8485 ON public.blog_post USING btree (author_id);


pg_restore: creating INDEX "public.blog_post_slug_b95473f2_like"
pg_restore: from TOC entry 3323; 1259 16560 INDEX blog_post_slug_b95473f2_like dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_slug_b95473f2_like" already exists
Command was: CREATE INDEX blog_post_slug_b95473f2_like ON public.blog_post USING btree (slug varchar_pattern_ops);


pg_restore: creating INDEX "public.blog_post_tags_post_id_a1c71c8a"
pg_restore: from TOC entry 3328; 1259 16574 INDEX blog_post_tags_post_id_a1c71c8a dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_tags_post_id_a1c71c8a" already exists
Command was: CREATE INDEX blog_post_tags_post_id_a1c71c8a ON public.blog_post_tags USING btree (post_id);


pg_restore: creating INDEX "public.blog_post_tags_tag_id_0875c551"
pg_restore: from TOC entry 3331; 1259 16575 INDEX blog_post_tags_tag_id_0875c551 dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "blog_post_tags_tag_id_0875c551" already exists
Command was: CREATE INDEX blog_post_tags_tag_id_0875c551 ON public.blog_post_tags USING btree (tag_id);


pg_restore: creating INDEX "public.django_admin_log_content_type_id_c4bce8eb"
pg_restore: from TOC entry 3312; 1259 16517 INDEX django_admin_log_content_type_id_c4bce8eb dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_admin_log_content_type_id_c4bce8eb" already exists
Command was: CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


pg_restore: creating INDEX "public.django_admin_log_user_id_c564eba6"
pg_restore: from TOC entry 3315; 1259 16518 INDEX django_admin_log_user_id_c564eba6 dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_admin_log_user_id_c564eba6" already exists
Command was: CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


pg_restore: creating INDEX "public.django_session_expire_date_a5c62663"
pg_restore: from TOC entry 3335; 1259 16598 INDEX django_session_expire_date_a5c62663 dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_session_expire_date_a5c62663" already exists
Command was: CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


pg_restore: creating INDEX "public.django_session_session_key_c0390e0f_like"
pg_restore: from TOC entry 3338; 1259 16597 INDEX django_session_session_key_c0390e0f_like dbadminuser
pg_restore: error: could not execute query: ERROR:  relation "django_session_session_key_c0390e0f_like" already exists
Command was: CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


pg_restore: creating FK CONSTRAINT "public.auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm"
pg_restore: from TOC entry 3340; 2606 16462 FK CONSTRAINT auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" for relation "auth_group_permissions" already exists
Command was: ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id"
pg_restore: from TOC entry 3341; 2606 16457 FK CONSTRAINT auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" for relation "auth_group_permissions" already exists
Command was: ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co"
pg_restore: from TOC entry 3339; 2606 16448 FK CONSTRAINT auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "auth_permission_content_type_id_2f476e4b_fk_django_co" for relation "auth_permission" already exists
Command was: ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id"
pg_restore: from TOC entry 3342; 2606 16477 FK CONSTRAINT auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "auth_user_groups_group_id_97559544_fk_auth_group_id" for relation "auth_user_groups" already exists
Command was: ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id"
pg_restore: from TOC entry 3343; 2606 16472 FK CONSTRAINT auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" for relation "auth_user_groups" already exists
Command was: ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm"
pg_restore: from TOC entry 3344; 2606 16491 FK CONSTRAINT auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" for relation "auth_user_user_permissions" already exists
Command was: ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id"
pg_restore: from TOC entry 3345; 2606 16486 FK CONSTRAINT auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" for relation "auth_user_user_permissions" already exists
Command was: ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.blog_comment blog_comment_post_id_580e96ef_fk_blog_post_id"
pg_restore: from TOC entry 3351; 2606 16584 FK CONSTRAINT blog_comment blog_comment_post_id_580e96ef_fk_blog_post_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "blog_comment_post_id_580e96ef_fk_blog_post_id" for relation "blog_comment" already exists
Command was: ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_post_id_580e96ef_fk_blog_post_id FOREIGN KEY (post_id) REFERENCES public.blog_post(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.blog_post blog_post_author_id_dd7a8485_fk_blog_author_id"
pg_restore: from TOC entry 3348; 2606 16555 FK CONSTRAINT blog_post blog_post_author_id_dd7a8485_fk_blog_author_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "blog_post_author_id_dd7a8485_fk_blog_author_id" for relation "blog_post" already exists
Command was: ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_author_id_dd7a8485_fk_blog_author_id FOREIGN KEY (author_id) REFERENCES public.blog_author(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.blog_post_tags blog_post_tags_post_id_a1c71c8a_fk_blog_post_id"
pg_restore: from TOC entry 3349; 2606 16564 FK CONSTRAINT blog_post_tags blog_post_tags_post_id_a1c71c8a_fk_blog_post_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "blog_post_tags_post_id_a1c71c8a_fk_blog_post_id" for relation "blog_post_tags" already exists
Command was: ALTER TABLE ONLY public.blog_post_tags
    ADD CONSTRAINT blog_post_tags_post_id_a1c71c8a_fk_blog_post_id FOREIGN KEY (post_id) REFERENCES public.blog_post(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.blog_post_tags blog_post_tags_tag_id_0875c551_fk_blog_tag_id"
pg_restore: from TOC entry 3350; 2606 16569 FK CONSTRAINT blog_post_tags blog_post_tags_tag_id_0875c551_fk_blog_tag_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "blog_post_tags_tag_id_0875c551_fk_blog_tag_id" for relation "blog_post_tags" already exists
Command was: ALTER TABLE ONLY public.blog_post_tags
    ADD CONSTRAINT blog_post_tags_tag_id_0875c551_fk_blog_tag_id FOREIGN KEY (tag_id) REFERENCES public.blog_tag(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co"
pg_restore: from TOC entry 3346; 2606 16507 FK CONSTRAINT django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "django_admin_log_content_type_id_c4bce8eb_fk_django_co" for relation "django_admin_log" already exists
Command was: ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating FK CONSTRAINT "public.django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id"
pg_restore: from TOC entry 3347; 2606 16512 FK CONSTRAINT django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id dbadminuser
pg_restore: error: could not execute query: ERROR:  constraint "django_admin_log_user_id_c564eba6_fk_auth_user_id" for relation "django_admin_log" already exists
Command was: ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


pg_restore: creating ACL "SCHEMA public"
pg_restore: warning: errors ignored on restore: 89
root@myweb:~/blog_django#
